
.centeringWrapper {
    width: 100%;
    display: flex;
    justify-content: center; /* Center the content horizontally */
    flex-wrap: wrap; /* Allow items to wrap to the next line on smaller screens */
    gap: 20px;
}

.radarContainer {
    display: flex;
    flex-direction: row;
    gap: 40px;
    height: 100%;
    /* 1. Base Font setting (for top-level elements) */
    font-family: 'Inter', sans-serif; 
    align-items: flex-start;
    box-sizing: border-box;
}

/* 2. UNIVERSAL FONT OVERRIDE (CRITICAL FIX) 
   This ensures ALL descendant elements (HTML and SVG text) inherit the font 
   by overriding weak default browser styles that cause the Times New Roman fallback. */
.radarContainer * {
    font-family: 'Inter', sans-serif;
}


/* Left Panel - Now relies solely on inheritance */
.leftPanel {
    display: flex;
    flex-direction: column;
    flex: 1; /* Allow panel to grow and shrink */
    min-width: 280px; /* Minimum width before wrapping */
    max-width: 320px;
    gap: 12px;
    align-items: center;
    box-sizing: border-box;
    padding: 24px;
}

.middlePanel {
    display: flex;
    justify-content: center;
    flex: 2; /* Allows the radar chart to take up more space */
    min-width: 400px; /* Ensure chart has enough space */
}

/* Radar wrapper - flexible, fills remaining space */
.radarWrapper {
    flex: 2 1 0; 
    min-width: 0; 
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
    box-sizing: border-box;
}

.radarWrapper text {
    font-family: 'Inter', sans-serif !important; 
    /* The !important flag is often necessary to override D3's inline or browser default SVG styles. */
}

.categoryLabel {
    font-family: 'Inter', sans-serif !important; 
    font-size: 14px;
    font-weight: 600;
    fill: #00cc88;
}

.itemGroup:hover text {
    /* Uses the local class to make the selector pure and scoped */
    font-size: 20px !important;
    font-weight: bold !important; 
    /* Include the bold weight you deleted from the D3 code */
}

/* Button inside left panel - Now relies solely on inheritance */
.createButton {
    padding: 10px 15px;
    width: 100%;
    background-color: hsl(var(--primary));
    color: hsl(var(--primary-foreground));
    border: none;
    border-radius: 4px;
    cursor: pointer;
    font-size: 1rem;
    margin-bottom: 20px;
    transition: background-color 0.3s;
}

.createButton:hover {
    background-color: hsl(var(--primary) / 0.9);
}

/* Radar chart items */
.radarItem {
    fill: rgb(42, 243, 95);
    cursor: pointer;
    filter: drop-shadow(0 0 6px rgba(0, 255, 128, 0.5));
    transition: transform 0.2s ease, filter 0.3s ease;
}

.radarItem:hover {
    transform: scale(1.15);
    filter: drop-shadow(0 0 12px rgba(0, 255, 128, 0.9));
}

/* Text inside radar - Now relies solely on inheritance */
.chartText {
    font-size: 12px;
    fill: #c1fff4;
    font-weight: bold;
    text-shadow: 0 0 4px rgba(0, 255, 191, 0.6);
    letter-spacing: 0.5px;
    font-family: 'Inter', sans-serif !important;
}

/* Text inside radar - Now relies solely on inheritance */
.chartTextNormal {
    font-size: 11px;
    fill: white;
    font-weight: 300;
    text-anchor: middle;
    letter-spacing: -0.2px;
    font-family: 'Inter', sans-serif !important;
}

/* Radar grid styling */
.radarGridCircle {
    fill: none;
    stroke: #00ff9f;
    stroke-opacity: 0.5;
}

.radarGridCircleOuter {
    stroke-width: 5;
    stroke: #00ffcc;
    filter: drop-shadow(0 0 5px rgba(0, 255, 204, 0.3));
}

.radarGridCircleInner {
    stroke-width: 1;
}

/* Radial lines */
.radialLine {
    stroke: #00ffaa;
    stroke-width: 0.6;
    stroke-dasharray: 2, 2;
    opacity: 0.5;
}

/* Quadrants */
.quadrantFillDark {
    fill: #0a0f0f;
}

.quadrantFillLight {
    fill: #131a1a;
}

/* Item circles based on impact */
.itemCircleLowImpact { fill: #77DD77; }
.itemCircleMediumImpact { fill: #FFD580; }
.itemCircleHighImpact { fill: #FF6961; }
.itemCircleDefault { fill: steelblue; }

/* Glow effect */
.itemGlowEffect { filter: url(#sofGlow); }

/* Opportunity ring styles */
.opportunityLow { fill: none; stroke: #77DD77; stroke-width: 3; }
.opportunityMedium { fill: none; stroke: #FFD580; stroke-width: 3; }
.opportunityHigh { fill: none; stroke: #FF6961; stroke-width: 3; }
